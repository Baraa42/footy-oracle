{
	"compiler": {
		"version": "0.8.9+commit.e5eed63a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract BetNFT",
						"name": "_betNFT",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "AmountToLow",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "apiId",
						"type": "string"
					}
				],
				"name": "GameAlreadyEnded",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "odds",
						"type": "uint256"
					}
				],
				"name": "OddsToLow",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "apiId",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "BetConverted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ChainlinkCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ChainlinkFulfilled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "id",
						"type": "bytes32"
					}
				],
				"name": "ChainlinkRequested",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "apiId",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "enum BettingAIO.BetSide",
						"name": "betSide",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum BettingAIO.BetType",
						"name": "betType",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "selection",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "odds",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					}
				],
				"name": "MatchedBetPlaced",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "apiId",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "enum BettingAIO.BetSide",
						"name": "betSide",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum BettingAIO.BetType",
						"name": "betType",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "selection",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "odds",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					}
				],
				"name": "UnmatchedBetPlaced",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "apiId",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "enum BettingAIO.BetSide",
						"name": "betSide",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum BettingAIO.BetType",
						"name": "betType",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "selection",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "odds",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					}
				],
				"name": "UnmatchedBetRemoved",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "apiId",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "enum BettingAIO.BetSide",
						"name": "betSide",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum BettingAIO.BetType",
						"name": "betType",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "selection",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint16",
						"name": "odds",
						"type": "uint16"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "from",
						"type": "address"
					}
				],
				"name": "UnmatchedBetUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "betNFT",
				"outputs": [
					{
						"internalType": "contract BetNFT",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_bytes32",
						"type": "bytes32"
					}
				],
				"name": "bytes32ToString",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					},
					{
						"internalType": "uint8",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_objectId",
						"type": "string"
					},
					{
						"internalType": "enum BettingAIO.BetType",
						"name": "_betType",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "_selection",
						"type": "uint8"
					},
					{
						"internalType": "uint16",
						"name": "_odds",
						"type": "uint16"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "createBackBet",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_objectId",
						"type": "string"
					},
					{
						"internalType": "enum BettingAIO.BetType",
						"name": "_betType",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "_selection",
						"type": "uint8"
					},
					{
						"internalType": "uint16",
						"name": "_odds",
						"type": "uint16"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "createLayBet",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "_requestId",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "_data",
						"type": "bytes32"
					}
				],
				"name": "fulfill",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_objectId",
						"type": "string"
					},
					{
						"internalType": "enum BettingAIO.BetSide",
						"name": "_betSide",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "_selection",
						"type": "uint8"
					}
				],
				"name": "hasMatchWinnerWon",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_objectId",
						"type": "string"
					},
					{
						"internalType": "enum BettingAIO.BetSide",
						"name": "_betSide",
						"type": "uint8"
					},
					{
						"internalType": "enum BettingAIO.BetType",
						"name": "_betType",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "_selection",
						"type": "uint8"
					},
					{
						"internalType": "uint16",
						"name": "_odds",
						"type": "uint16"
					},
					{
						"internalType": "uint256",
						"name": "_amount",
						"type": "uint256"
					}
				],
				"name": "removeUnmatchedBet",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_objectId",
						"type": "string"
					}
				],
				"name": "requestResult",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "requestId",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_objectId",
						"type": "string"
					},
					{
						"internalType": "enum BettingAIO.BetSide",
						"name": "_betSide",
						"type": "uint8"
					},
					{
						"internalType": "enum BettingAIO.BetType",
						"name": "_betType",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "_selection",
						"type": "uint8"
					},
					{
						"internalType": "uint16",
						"name": "_odds",
						"type": "uint16"
					},
					{
						"internalType": "string",
						"name": "_tokenURI",
						"type": "string"
					}
				],
				"name": "transferBetToNFT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_objectId",
						"type": "string"
					},
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "withdrawWithNFT",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"requestResult(string)": {
					"notice": "Create a Chainlink request to retrieve API response, find the target data, the result is a string in the format \"fixtureId_Winner\""
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/BettingAIO.sol": "BettingAIO"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/dev/Chainlink.sol": {
			"keccak256": "0x724cde3f87920ac7d846652058e594c4cac7475444fb98f595e172dc86fc2d6e",
			"license": "MIT",
			"urls": [
				"bzz-raw://a1310d014be6f4dfb4f8d1c11f511d9d025f2260f90cfa81afd0e7ef9212744f",
				"dweb:/ipfs/QmWy2rMeN4BcU9acLXUQhqKGpUewXNNWuixCGrBTLvrWwr"
			]
		},
		"@chainlink/contracts/src/v0.8/dev/ChainlinkClient.sol": {
			"keccak256": "0xe3b0b3128d1a63c20c5f58a387d3856adf597bf1f94020e8c1e45e57b994672d",
			"license": "MIT",
			"urls": [
				"bzz-raw://08e597c1683adacd0c58e9d3817ef3378f845cf6ea559a1f66bc0f2048ded723",
				"dweb:/ipfs/QmXamSGnybFWx8ZgchQHqFW2WSVyx8SfJzQtLYZyjTvnoE"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/ChainlinkRequestInterface.sol": {
			"keccak256": "0xa8adfbd0326c982c38ea3808a4da52f0a51807241787c4bd28235bbe86707c04",
			"license": "MIT",
			"urls": [
				"bzz-raw://364e3be6190a68fbe84e4ede560af3ccede8d36e40e91378b4de042202c6e86a",
				"dweb:/ipfs/QmNpCP9j3FhBd1hDofg1uMCYiXBKNTU95n1Lxbnnj12oxw"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/ENSInterface.sol": {
			"keccak256": "0xd8545d2e73f7aa517543d97e1763d95c11ddd52a5050cf1933047c9f22f10b5a",
			"license": "MIT",
			"urls": [
				"bzz-raw://de663408f7c1937e46aef8d86e180a2528f31cdcbc43e1682297c20be03af461",
				"dweb:/ipfs/QmVpFw2fJkaegf6hGRYtjx932KJCs6bAuKvCRoXrhV7GMF"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol": {
			"keccak256": "0x50528c237386c55ff122d047f91b32be7abe24e9dfdc609de21cd605aae83b9a",
			"license": "MIT",
			"urls": [
				"bzz-raw://92037bd13b34432f9377cb205c0039bd0724af66ea605598db31d4ccd33f879f",
				"dweb:/ipfs/QmdH6Ef5PZgcPrJuWboLX5MhmezzTFniZCwJ6fk2tYVua4"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/OperatorInterface.sol": {
			"keccak256": "0x71dcc45bae7384cfb47c74de767a7ec56df21e165468610b2abf2bb02ca0c352",
			"license": "MIT",
			"urls": [
				"bzz-raw://173fbef5a1b6d41eef13583531edf98a4a2faa2712adc049e6cf390ca104725f",
				"dweb:/ipfs/Qmd8uNSup5VQ5B6bV2ciJVxvg7ix5s9zba4PJx6DsVZcRm"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/OracleInterface.sol": {
			"keccak256": "0x55fb2c156150379d285ab89081ff5add6f37343d7992bd2ec1485a2652af94d7",
			"license": "MIT",
			"urls": [
				"bzz-raw://cd1fc4c0fb89f7de9ec68fdc582950c63d581f3822ef71d9a8fd240a73b37778",
				"dweb:/ipfs/QmdvboNgXzaQXMaceVQPGwpZHMC5fe9LU9GkippzA8quPJ"
			]
		},
		"@chainlink/contracts/src/v0.8/interfaces/PointerInterface.sol": {
			"keccak256": "0xc3d897e7c93b02e53f21b40accd4a0bd5c38f9780a4f74a7109b70fbfde03b40",
			"license": "MIT",
			"urls": [
				"bzz-raw://11166ec1ac48aaf14f5a7053283371341e0418eaced385b7ed7c9140d9f1f1df",
				"dweb:/ipfs/QmV4bkHEEpeqC6pr3nmmQQURkVKMroucA31YoGcysnByt7"
			]
		},
		"@chainlink/contracts/src/v0.8/vendor/BufferChainlink.sol": {
			"keccak256": "0x68a67e15960462bf12313307765e619de03c73949b6ef0626785e7e76cf484af",
			"license": "MIT",
			"urls": [
				"bzz-raw://6859a1ea9d84cc3888dee8abb2491bc0020d9ff06ddf1d9f6a36fc1690d58a67",
				"dweb:/ipfs/QmdEeRx4rKRDtCwWcz4BP7ZkcCCx6XSYMH9Hff2baXQMww"
			]
		},
		"@chainlink/contracts/src/v0.8/vendor/CBORChainlink.sol": {
			"keccak256": "0xe7c6e4290ac2a41a138e6bd89d89a2779f66847a5ee6fb5a6f2a3386e5ce589d",
			"license": "MIT",
			"urls": [
				"bzz-raw://1eb0e7821c4963b125b47c93e31cd6e073d2b87550651054fc526e63915d92ab",
				"dweb:/ipfs/QmVJq2sNTzX4Hfyway8JiY4RoQw4vQRSbzJWbsC7JsiyUs"
			]
		},
		"@chainlink/contracts/src/v0.8/vendor/ENSResolver.sol": {
			"keccak256": "0xeed48a6a522c400f024f8725ad931833205cb63cc87285b46c5c0e88ca090352",
			"license": "MIT",
			"urls": [
				"bzz-raw://c4065aed34d3fae897ac7eb7c5e3af1ba9f458fc31c9f165acae8fa448125ec5",
				"dweb:/ipfs/Qmejzy7Kdw4mHiv5QqyvA8nUU5SeqH6n6dQoe1VEWZUnsi"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981",
				"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51"
			]
		},
		"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
			"keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
			"license": "MIT",
			"urls": [
				"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
				"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
			]
		},
		"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
			"keccak256": "0x81c02855bc239e16ec09eee000a8bec691424c715188d6d881037e69c45414c4",
			"license": "MIT",
			"urls": [
				"bzz-raw://46e3ecc8920aeb78c362a387520fe28e022cdc6d04256d9e5874eb8ff6868b6d",
				"dweb:/ipfs/QmdfCTHrV6CZMGiM3KqGF8tWkdNvGpEmWFyy72X1LAHsz2"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
			"keccak256": "0x516a22876c1fab47f49b1bc22b4614491cd05338af8bd2e7b382da090a079990",
			"license": "MIT",
			"urls": [
				"bzz-raw://a439187f7126d31add4557f82d8aed6be0162007cd7182c48fd934dbab8f3849",
				"dweb:/ipfs/QmRPLguRFvrRJS7r6F1bcLvsx6q1VrgjEpZafyeL8D7xZh"
			]
		},
		"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
			"keccak256": "0xd5fa74b4fb323776fa4a8158800fec9d5ac0fec0d6dd046dd93798632ada265f",
			"license": "MIT",
			"urls": [
				"bzz-raw://33017a30a99cc5411a9e376622c31fc4a55cfc6a335e2f57f00cbf24a817ff3f",
				"dweb:/ipfs/QmWNQtWTPhA7Lo8nbxbc8KFMvZwbFYB8fSeEQ3vuapSV4a"
			]
		},
		"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
			"keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
			"license": "MIT",
			"urls": [
				"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
				"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4",
			"license": "MIT",
			"urls": [
				"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922",
				"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45",
			"license": "MIT",
			"urls": [
				"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30",
				"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2"
			]
		},
		"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
			"keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
			"license": "MIT",
			"urls": [
				"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
				"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
			]
		},
		"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
			"license": "MIT",
			"urls": [
				"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
				"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
			]
		},
		"contracts/BetNFT.sol": {
			"keccak256": "0xa026a68fec4438c76c33adc7ff3a562f7ca0fd93a16e6f60aa82ecd0cebc95f3",
			"urls": [
				"bzz-raw://d93ed9cc55418baa235d19562ca40322a94c21c9b62e557c3144cd117d04e5b4",
				"dweb:/ipfs/QmVavB1XWidCYd5VBN2iDUKC7u5cKm47rikRuRYafoD86V"
			]
		},
		"contracts/BettingAIO.sol": {
			"keccak256": "0x960438b32c2076f61c0e92016265f55e114ace09f6fc63cef942749179f41244",
			"license": "MIT",
			"urls": [
				"bzz-raw://d6b6a944a98acd194b2eb0a7524c4ff50be06d38587c3284098c84902b4d4b59",
				"dweb:/ipfs/QmYJwzuqH7UCv5Pi55dfbfiPa9YbtKU6dbS6WmXPuPU6Dx"
			]
		}
	},
	"version": 1
}